name: validate-sa-json

on:
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Seoul
      # 필수 Secrets
      GOOGLE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}  # ← 서비스계정 JSON 원문(그대로)
      SHEET_ID: ${{ secrets.SHEET_ID }}              # ← 구글시트 ID
      # (선택) 파일 검증까지 하고 싶을 때만 사용
      SA_PATH: ${{ github.workspace }}/sa.json

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install gspread google-auth

      # 1) ENV에 담긴 JSON이 올바른지 검증 (내용은 출력하지 않음)
      - name: Validate JSON in ENV (no content printed)
        run: |
          python - <<'PY'
import os, json, sys
s = os.environ.get("GOOGLE_SA_JSON")
if not s or not s.strip():
    print("❌ GOOGLE_SA_JSON is empty or missing"); sys.exit(1)
try:
    info = json.loads(s)
except Exception as e:
    print("❌ ENV JSON invalid:", e); sys.exit(1)

required = ["type","private_key","client_email","token_uri"]
missing = [k for k in required if k not in info]
if missing:
    print("❌ Missing keys in JSON:", missing); sys.exit(1)

if info.get("type") != "service_account":
    print("❌ JSON 'type' is not 'service_account'"); sys.exit(1)

print("✅ ENV JSON structure OK")
PY

      # 2) (선택) 파일로도 복원해서 검증하고 싶은 경우 — 원치 않으면 이 스텝은 주석 처리해도 됩니다.
      - name: (Optional) Write JSON to file and validate
        shell: bash
        run: |
          # 멀티라인 안전 복원(Heredoc; 변수 치환 방지)
          cat > "${SA_PATH}" << 'EOF'
${{ env.GOOGLE_SA_JSON }}
EOF
          python - <<'PY'
import os, json, sys
p = os.environ.get("SA_PATH","sa.json")
try:
    with open(p,"r",encoding="utf-8") as f:
        json.load(f)
    print("✅ File JSON valid:", p, "size:", os.path.getsize(p), "bytes")
except Exception as e:
    print("❌ File JSON invalid:", e); sys.exit(1)
PY

      # 3) 실제 인증 시도: 토큰 생성 및 시트 접근(제목만 읽기)
      - name: Try auth & open sheet
        run: |
          python - <<'PY'
import os, json, sys
import gspread
from google.oauth2.service_account import Credentials

s = os.environ.get("GOOGLE_SA_JSON")
sheet_id = os.environ.get("SHEET_ID")
if not sheet_id:
    print("⚠️ SHEET_ID not provided; skipping sheet open test")
    sys.exit(0)

try:
    info = json.loads(s)
    creds = Credentials.from_service_account_info(
        info, scopes=["https://www.googleapis.com/auth/spreadsheets"]
    )
    gc = gspread.authorize(creds)
    sh = gc.open_by_key(sheet_id)
    print("✅ Auth OK / Sheet title:", sh.title)
    # 시트 접근 권한은 있으나 쓰기 권한이 없는 경우는 여기서는 감지 어렵습니다.
    # 실제 쓰기 테스트는 별도 스크립트에서 진행하세요.
except Exception as e:
    print("❌ Auth or sheet open failed:", repr(e))
    sys.exit(1)
PY
